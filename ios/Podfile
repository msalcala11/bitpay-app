def node_require(script)
  # Resolve script with node to allow for hoisting
  require Pod::Executable.execute_command('node', ['-p',
    "require.resolve(
      '#{script}',
      {paths: [process.argv[1]]},
    )", __dir__]).strip
end

# Use it to require both react-native's and this package's scripts:
node_require('react-native/scripts/react_native_pods.rb')
node_require('react-native-permissions/scripts/setup.rb')

require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'

#######
# Read min iOS version from Xcode project and set as min iOS version for Podfile
require 'xcodeproj'

project_path = './BitPayApp.xcodeproj'
project = Xcodeproj::Project.open(project_path)
min_ios_version_supported = project.build_configurations.first.build_settings['IPHONEOS_DEPLOYMENT_TARGET']
######

# Fabric configuration
ENV['RCT_NEW_ARCH_ENABLED'] = '1'
ENV['USE_HERMES'] = '1'

platform :ios, min_ios_version_supported
prepare_react_native_project!

# Setup permissions you need
setup_permissions([
'AppTrackingTransparency',
'Bluetooth',
'Camera',
'FaceID',
'LocationWhenInUse',
'Notifications',
])

linkage = ENV['USE_FRAMEWORKS']
if linkage != nil
  Pod::UI.puts "Configuring Pod with #{linkage}ally linked Frameworks".green
  use_frameworks! :linkage => linkage.to_sym
end

# Disable Location APIs so we compile out any privacy sensitive APIs
$VCEnableLocation=false

target 'BitPayApp' do
  pod 'React-RCTText', :path => '../node_modules/react-native/Libraries/Text', :modular_headers => true
  
  # # Add explicit Braze dependencies
  # pod 'BrazeKit'
  # pod 'BrazeUI'

  config = use_native_modules!

  use_react_native!(
    :path => config[:reactNativePath],
    # An absolute path to your application root.
    :app_path => "#{Pod::Config.instance.installation_root}/.."
  )

  target 'BitPayAppTests' do
    inherit! :complete
    # Pods for testing
  end

  post_install do |installer|
    # Add React Native post install
    react_native_post_install(
      installer,
      config[:reactNativePath],
      :mac_catalyst_enabled => false
    )

    installer.pods_project.targets.each do |target|
      target.build_configurations.each do |config|
        # Enable modules
        config.build_settings['CLANG_ENABLE_MODULES'] = 'YES'
        config.build_settings['DEFINES_MODULE'] = 'YES'
        
        # C++ Settings
        config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++20'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
        config.build_settings.delete 'IPHONEOS_DEPLOYMENT_TARGET'
        
        # Other settings
        config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.4'
        config.build_settings['ENABLE_BITCODE'] = 'NO'
        
        # Add Reanimated version string definition
        if target.name == 'RNReanimated'
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)']
          config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'REANIMATED_VERSION_STRING=\"3.3.0\"'
        end
        
        config.build_settings['OTHER_CFLAGS'] = '-DFOLLY_NO_CONFIG -DFOLLY_MOBILE=1 -DFOLLY_USE_LIBCPP=1 -DFOLLY_HAVE_COROUTINES=1'
        config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] << 'RCT_NEW_ARCH_ENABLED=1'
      end
    end

    # Modify RCT-Folly Portability.h to disable coroutines
    # Dir.glob(installer.sandbox.root + "RCT-Folly/folly/Portability.h") do |file|
    #   begin
    #     # First try to make the file writable
    #     system "chmod +w #{file}"
        
    #     contents = File.read(file)
    #     modified_contents = contents.gsub(/#define FOLLY_HAS_COROUTINES 1/, '#define FOLLY_HAS_COROUTINES 0')
        
    #     # Try writing with elevated privileges if needed
    #     if !File.writable?(file)
    #       system "sudo chmod +w #{file}"
    #     end
        
    #     File.write(file, modified_contents)
        
    #     # Optionally restore original permissions
    #     system "chmod -w #{file}"
    #   rescue => e
    #     Pod::UI.warn "Failed to modify Portability.h: #{e.message}"
    #   end
    # end
  end

  pod 'RCT-Folly', :podspec => '../node_modules/react-native/third-party-podspecs/RCT-Folly.podspec', :modular_headers => true
  pod 'boost', :podspec => '../node_modules/react-native/third-party-podspecs/boost.podspec', :modular_headers => true
end
